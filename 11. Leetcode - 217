// Contains Duplicate -
// Leetcode 217



methode 01 - using set

class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        unordered_set<int>st;
        for(auto x:nums) st.insert(x);
        return(st.size()!=nums.size());
    }
};


-------------------------------------------

methode 02 - using map

class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        unordered_map<int,int>mp;
        for(auto x:nums) mp[x]++;
        for(auto x:mp) if(x.second>=2) return true;
        return false;
    }
};


-----------------------------------------

Methode 03 -  using sorting

class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size()-1;i++){
            if(nums[i]==nums[i+1]) return true;
        }
        return false;
    }
};
