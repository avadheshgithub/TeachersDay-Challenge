// Single Number
// Leetcode 136


// Methode 01 - Bit Manipulation

class Solution {
public:
    int singleNumber(vector<int>& nums) {
         int result = nums[0] ;
        for(int i=1;i<nums.size();i++){
            result^=nums[i];
        }
        return result;
    }
};

--------------------------------------------------------------

// Methode 02 - hash Map

class Solution {
public:
    int singleNumber(vector<int>& nums) {
        unordered_map<int,int>mp;
        for(auto x:nums) mp[x]++;
        for(auto x:mp) if(x.second==1) return x.first;
        return -1;
    }
};

--------------------------------------------------------------

// Methode 03 - Sorting

class Solution {
public:
    int singleNumber(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size()-1;i+=2){
            if(nums[i]!=nums[i+1]) return nums[i];
        }
        return nums[nums.size()-1];
    }
};
